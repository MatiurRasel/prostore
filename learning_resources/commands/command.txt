Create a project -> npx create-next-app@latest
√ What is your project named? ... prostore
√ Would you like to use TypeScript? ... No / Yes
√ Would you like to use ESLint? ... No / Yes
√ Would you like to use Tailwind CSS? ... No / Yes
√ Would you like your code inside a `src/` directory? ... No / Yes
√ Would you like to use App Router? (recommended) ... No / Yes
√ Would you like to use Turbopack for `next dev`? ... No / Yes
√ Would you like to customize the import alias (`@/*` by default)? ... No / Yes
Creating a new Next.js app in M:\GITHUB\prostore.

Open with VSCODE Directly  -> code prostore
--GIT
…or create a new repository on the command line
echo "# prostore" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M master
git remote add origin https://github.com/MatiurRasel/prostore.git
git push -u origin master
…or push an existing repository from the command line
git remote add origin https://github.com/MatiurRasel/prostore.git
git branch -M master
git push -u origin master


Session 1
Run the Project -> npm run dev
-->sfc for Generating Default .tsx values /rafce for .jsx values
--> Default Project Setup

-> On app -> page.tsx which is the main landing page remove all default values.
-> On app -> layout.tsx remove all fonts and add Inter(Google) font and related code.
-> Delete the global/s.css which have default styling CSS/Tailwind.
-> Add a Folder named assets -> styles -> globals.css and make reference on layout.css
    also add loader.gif on assets folder.
-> Delete Defaults svg on public folder if not needed & add your default project based image/s on public -> images
-> if a custom favicon.ico then replace the default with custom.

--> Add ShadCN UI Utility based library for design.
npx shadcn@latest init
√ Which style would you like to use? » Default
√ Which color would you like to use as the base color? » Slate
? Would you like to use CSS variables for theming? »  yes

It looks like you are using React 19.
Some packages may fail to install due to peer dependency issues in npm (see https://ui.shadcn.com/react-19).

√ How would you like to proceed? » Use --legacy-peer-deps

npx shadcn@latest add button 
 ->  add `components` added a .tsx file if exists or not create/add on components/ui/button.tsx

-->Root layout
there already a layout.tsx but if need multiple layout then create a folder named (root) -> add new layout.tsx
->move app->page.tsx into (root)folder.
for constant files make a folder into lib folder then create a file named index.ts
for environment variables create .env file on root project.
--> Header On components/shared/header [index.tsx]
--> Footer( as normal)  On components/ [footer.tsx]

npm i lucide-react
-->Theme Mode Toggle
npm i next-themes
npx shadcn@latest add dropdown-menu 

--> Loading  and not found page

-->Responsive Sheet Menu
npx shadcn@latest add sheet

with sample data (sample-data.ts)
--product-list
--product-card
npx shadcn@latest add card
--product-price


Session 2
Neon for serverless POSTGRES / Azure SQL Database for serverless mssql
PRISMA for ORM , Migration, Seed Data

npm i -D prisma @prisma/client
npx prisma init
added prisma for vscode ctrl + shift + P -> Open User Settings(JSON)
add this if not exists
 ```
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  }
}
```
--add Migration to db
npx prisma generate
--generate DDL to db
npx prisma migrate dev --name init

--check data/database like pgadmin
npx prisma studio
--seed data into db
npx tsx db/seed

--load data from database not as static files need to use Server Actions and Mutations
Server Actions -> For Single model Monolith Application 
API Route -> For multiple model like (different clients.(REACT,Mobile Apps etc)).

--For Data Validate Zod Validation
npm i zod

--configuration for  neon serverless
npm i @neondatabase/serverless @prisma/adapter-neon ws
npm i -D @types/ws bufferutil

--Product Details page
npx shadcn@latest add badge
--Product Image Components

--ON VERCEL DEPLOYMENT BUILD & OUTPUT SETTINGS INSTALL command
npm install --legacy-peer-deps

Session 3
--Prisma User Related model
npx prisma generate
npx prisma migrate dev --name add_user_based_tables
npx prisma studio

--Seed User Data
npm i bcrypt-ts-edge
npx tsx db/seed
npx prisma studio

--Next Auth Setup
--For V5
npm i next-auth@beta 
--Prisma adapter
npm i @auth/prisma-adapter

openssl rand -base64 32
OR IN POWERSHELL
[convert]::ToBase64String((1..32 | ForEach-Object {Get-Random -Minimum 0 -Maximum 255} | ForEach-Object {[byte]$_}))
hWz0WTJHnlHv+tzrB7zKZJ9/M8m0dA+7ss6mdb5A6II=

--NEXT AUTH Catch ALL API Route
make file named route.ts on app/api/auth/[...nextauth]

--Sign in & Sign out
--Actions
--Credentials Sign In Form
--Auth layout
--Signin Form
--Hook up Sign in form
--Callback URL Redirection
--- For any server components directly use auth(.ts) but for client components need to use hooks (useSessions)
--Sign up Zod Schema & Action With adding Temp Password
--Sign up Page & Form
--Sign up error handling
--customize token with jwt

---Session 4
Cart Schema/model, Cart Actions, NextAuth Callback, Dynamic Cart button, Add to Cart Components,  UseTransition Hook

--Cart Zod Schema & Prisma model
npx shadcn@latest add toast
--Add to Cart Component
--Session Cart ID cookie
--Get Item From Cart
--Price Calc & Add to Database
--Handle Quantity & Multiple Products
--Remove Cart Action
--Dynamic Cart Button
--Smooth UI with UseTransition hook


---Session 5
Cart Page, ShadCN UI Table, Format Currency, Shipping Address Page, Shipping Address Form, Form Submission/Action, Checkout Steps Component
npx shadcn@latest add table
npm i react-hook-form
npm i react-hook-form @hookform/resolvers
npx shadcn@latest add form

---Session 6
Payment method select, Order/OrderItem Schema, Create Order Action, Place Order Page, Order Details Page, Format Utility Functions.
npx shadcn@latest add radio-group
npx prisma generate
npx prisma migrate dev --name add_order
npx prisma studio
npx shadcn@latest add badge

---Session 7
PayPal Sandbox Setup, PayPal API File, Generate Access Token, Create Order, Capture Payment, Jest Testing, Paypal Action, Paypal Buttons
npm i -D jest ts-jest ts-node @types/jest @types/node dotenv
npm init jest@latest
npm test
npm i @paypal/react-paypal-js

---Session 8
User Layout & Menu, Get User Orders, Orders Pagination, Update Profile Action, User Profile Form
npm i query-string

---Session 9
Admin Layout & Menu, Admin Overview Area, Sales Chart(Recharts), Admin Orders Page, Delete Orders, Update Orders
npm install recharts
npx shadcn@latest add alert-dialog dialog

--Session  10 
Get& Display Products, Delete Products, Create Products, Upload thing Config, Upload Product Image, Is Featured Banner, Update Products
npm i slugify
npx shadcn@latest add textarea
npm install uploadthing @uploadthing/react
npx shadcn@latest add checkbox   

--Session 11
Get & Display Users, Delete Users, Edit User Page, Admin Search Form, Orders Search, Users Search
npx shadcn@latest add select

--Session 12
Category Drawer, Featured Product Carousel, Search Component, Search Page, Get Filters & Apply, Add Filters Link, Sorting
npx shadcn@latest add drawer
npx shadcn@latest add carousel
npm i embla-carousel-autoplay

--Session 13 
Prisma Schema Model, Review List Component, Review Form Dailog, Create & Update Action, Display Reviews, Pre-Fill Review Form
npx prisma generate
--If Needed then 2 commands
taskkill /F /IM node.exe
rm -r -force node_modules/.prisma

npx prisma migrate dev --name add_review


--Session 14
Stripe Account Setup, Payment Intent, Stripe Form Component, Payment Success Page, WebHook For Payment
npm i stripe @stripe/stripe-js @stripe/react-stripe-js

--Payment Intent
  Represents a specific transaction for collecting payment from a customer. 
  It's an attempt to collect monet containing the info for a payment.
  track it's status and hand any authentication.
  
  -- Overall Steps: 
  => Create a Payment Intent
  => Confirm payment to client
  => check payment status
  => Handle success/failure

  --Intent Status Updates:
  => Requires Payment method
  => Requires Confirmation
  => Requires Action
  => Processing
  => Succeeded
  => Canceled or Failed

--Session 15
Resend Account Setup, Receipt Email Template, Preview Email In Browser, Send Email From App
npm i resend react-email @react-email/components

--Session 16
Icon Boxes Component, Deal Countdown timer


--Improvements 
npx shadcn-ui@latest add scroll-area
npm install @radix-ui/react-separator
